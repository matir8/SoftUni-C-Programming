<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/martin/Desktop/SoftUni-C-Programming/13-C-File-Processing/02-ReadTheOddLines/bin/Debug/02-ReadTheOddLines </line>
</preamble>

<pid>5745</pid>
<ppid>3469</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--leak-check=full</arg>
    <arg>--track-origins=yes</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/martin/Desktop/SoftUni-C-Programming/13-C-File-Processing/02-ReadTheOddLines/ValgrindOut.xml</arg>
  </vargv>
  <argv>
    <exe>/home/martin/Desktop/SoftUni-C-Programming/13-C-File-Processing/02-ReadTheOddLines/bin/Debug/02-ReadTheOddLines</exe>
    <arg></arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.540 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param open(filename) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x4F2F270</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.21.so</obj>
      <fn>__open_nocancel</fn>
      <dir>/build/buildd/glibc-2.21/io/../sysdeps/unix</dir>
      <file>syscall-template.S</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x4EB2ED4</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.21.so</obj>
      <fn>_IO_file_open</fn>
      <dir>/build/buildd/glibc-2.21/libio</dir>
      <file>fileops.c</file>
      <line>220</line>
    </frame>
    <frame>
      <ip>0x4EB2ED4</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.21.so</obj>
      <fn>_IO_file_fopen@@GLIBC_2.2.5</fn>
      <dir>/build/buildd/glibc-2.21/libio</dir>
      <file>fileops.c</file>
      <line>327</line>
    </frame>
    <frame>
      <ip>0x4EA7173</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.21.so</obj>
      <fn>__fopen_internal</fn>
      <dir>/build/buildd/glibc-2.21/libio</dir>
      <file>iofopen.c</file>
      <line>86</line>
    </frame>
    <frame>
      <ip>0x40078B</ip>
      <obj>/home/martin/Desktop/SoftUni-C-Programming/13-C-File-Processing/02-ReadTheOddLines/bin/Debug/02-ReadTheOddLines</obj>
      <fn>main</fn>
      <dir>/home/martin/Desktop/SoftUni-C-Programming/13-C-File-Processing/02-ReadTheOddLines</dir>
      <file>main.c</file>
      <line>11</line>
    </frame>
  </stack>
  <auxwhat>Address 0xffefff210 is on thread 1's stack</auxwhat>
  <auxwhat>in frame #3, created by main (main.c:7)</auxwhat>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x40073A</ip>
      <obj>/home/martin/Desktop/SoftUni-C-Programming/13-C-File-Processing/02-ReadTheOddLines/bin/Debug/02-ReadTheOddLines</obj>
      <fn>main</fn>
      <dir>/home/martin/Desktop/SoftUni-C-Programming/13-C-File-Processing/02-ReadTheOddLines</dir>
      <file>main.c</file>
      <line>7</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4EA66B4</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.21.so</obj>
      <fn>fclose@@GLIBC_2.2.5</fn>
      <dir>/build/buildd/glibc-2.21/libio</dir>
      <file>iofclose.c</file>
      <line>54</line>
    </frame>
    <frame>
      <ip>0x400841</ip>
      <obj>/home/martin/Desktop/SoftUni-C-Programming/13-C-File-Processing/02-ReadTheOddLines/bin/Debug/02-ReadTheOddLines</obj>
      <fn>main</fn>
      <dir>/home/martin/Desktop/SoftUni-C-Programming/13-C-File-Processing/02-ReadTheOddLines</dir>
      <file>main.c</file>
      <line>34</line>
    </frame>
  </stack>
  <auxwhat>Address 0x0 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:42.676 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

